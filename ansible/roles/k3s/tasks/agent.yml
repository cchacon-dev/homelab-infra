---
# Join workers to the K3s server automatically by reading the server's node-token.
# This avoids relying on an external secret variable and is safe/idempotent.

- name: K3s | Wait for TCP 6443 on control-plane from workers
  ansible.builtin.wait_for:
    host: "{{ k3s_server_ip }}"
    port: 6443
    timeout: 120
  changed_when: false
  when: "'k3s_workers' in group_names"
  tags: [k3s]

- name: K3s | Read K3s server node-token
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: k3s_token_slurp
  delegate_to: "{{ groups['k3s_server'][0] }}"
  run_once: true
  when: "'k3s_workers' in group_names"
  tags: [k3s]

- name: K3s | Set fact with K3S_TOKEN
  ansible.builtin.set_fact:
    k3s_node_token: "{{ (k3s_token_slurp.content | b64decode).strip() }}"
  when: "'k3s_workers' in group_names"
  tags: [k3s]

- name: K3s | Download K3s installer script (agent)
  ansible.builtin.get_url:
    url: "{{ k3s_install_script_url }}"
    dest: "{{ k3s_install_script_path }}"
    mode: "0755"
  when: "'k3s_workers' in group_names"
  tags: [k3s]

- name: K3s | Install K3s agent (join to server)
  ansible.builtin.command: >
    sh {{ k3s_install_script_path }}
  environment:
    INSTALL_K3S_VERSION: "{{ k3s_channel_version }}"
    K3S_URL: "{{ k3s_server_url }}"
    K3S_TOKEN: "{{ k3s_node_token }}"
    INSTALL_K3S_EXEC: agent
  args:
    creates: /etc/systemd/system/k3s-agent.service
  when: "'k3s_workers' in group_names"
  tags: [k3s]

- name: K3s | Ensure K3s agent service is enabled and running
  ansible.builtin.systemd:
    name: k3s-agent
    enabled: true
    state: started
  when: "'k3s_workers' in group_names"
  tags: [k3s]
